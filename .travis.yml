language: c

cache: 
  ccache: true
  directories:
    - $HOME/Library/Caches/Homebrew
# env: 
#   jobs:
#     - CHANNEL=stable
#     - CHANNEL=devel
matrix:
  include:
    # Build and test against the master (stable) and devel branches of Nim
    - os: linux
      name: linux with mysql
      compiler: gcc
      services:
        mysql # mysql  Ver 14.14 Distrib 5.7.30, for Linux (x86_64) using  EditLine wrapper

    - os: linux
      name: linux with mariadb
      compiler: gcc
      addons:
        mariadb: '10.4'

    # On OSX we only test against clang (gcc is mapped to clang by default)
    - os: osx
      name: osx with mysql
      compiler: clang
      env: USE_SHA2=true
      before_install:
        - brew install ccache
        - export PATH="/usr/local/opt/ccache/libexec:$PATH"
        - brew install mysql # mysql-8.0.21
        - mysql.server start
    - os: osx
      name: osx with mariadb
      compiler: clang
      # mariadb-10.5.5.high_sierra.bottle.tar.gz
      env: TRAVIS_MARIADB_VERSION=10.5.5
      before_install:
        - brew install ccache
        - rm -f /etc/my.cnf
        - brew install mariadb
        - brew services start mariadb

  allow_failures:
    # Ignore failures when building against the devel Nim branch
    # Also ignore OSX, due to very long build queue
    - os: osx
      env: CHANNEL=devel
  fast_finish: true

before_script:

  # - |
  #   if [ -z "$TRAVIS_MARIADB_VERSION" ] 
  #   then
  #     sudo systemctl stop mysql
  #     sudo mysqld_safe --skip-grant-tables --skip-networking &
  #     # mariadb 10.4 and later replace to mysql.global_priv https://mariadb.com/kb/en/mysqluser-table/
  #     # sudo mysql -u root -e "use mysql;UPDATE user SET authentication_string = PASSWORD('123456') WHERE User = 'root' AND Host = 'localhost';UPDATE user SET password = PASSWORD('123456') WHERE User = 'root' AND Host = 'localhost';FLUSH PRIVILEGES;"
  #     sudo mysql -u root -e "UPDATE mysql.user SET plugin = 'mysql_native_password' WHERE user = 'root' AND plugin = 'unix_socket';FLUSH PRIVILEGES;"

  #     sudo systemctl start mysql;
  #   fi

  - sudo mysql -u root -e "create database if not exists test;"
  - |
    if [ -z "$TRAVIS_MARIADB_VERSION" ] 
    then
      sudo mysql -u root  -e "create user 'test_user'@'localhost' identified WITH mysql_native_password BY '123456';"
      
      if [ "$USE_SHA2" == "true" ]
      then
        sudo mysql -u root  -e "CREATE USER 'sha2user'@'localhost' IDENTIFIED WITH caching_sha2_password BY 'password';"
        sudo mysql -u root  -e "grant all on *.* to 'sha2user'@'localhost';"
      fi
    else
      sudo mysql -u root  -e "create user 'test_user'@'localhost' identified VIA mysql_native_password USING PASSWORD('123456');"
      # mariadb not well support https://mariadb.com/kb/en/authentication-plugin-sha-256/#client-authentication-plugins
      # sudo mysql -u root  -e "CREATE USER 'sha2user'@'localhost' IDENTIFIED VIA caching_sha2_password USING PASSWORD('123456');"
    fi

  - sudo mysql -u root  -e "grant all on *.* to 'test_user'@'localhost';"
  # - mysql -h 127.0.0.1 -u root -e "create user 'mysql2'@'127.0.0.1' identified by '123456';"
  # - mysql -h 127.0.0.1 -u root -e "grant all on *.* to 'mysql2'@'127.0.0.1';"


install:
  - export CHOOSENIM_NO_ANALYTICS=1
  - curl https://nim-lang.org/choosenim/init.sh -sSf > init.sh
  - sh init.sh -y
  - export PATH=~/.nimble/bin:$PATH
  - echo "export PATH=~/.nimble/bin:$PATH" >> ~/.profile
  # - choosenim $CHANNEL
  - nimble install -d -y

script:
  - nimble test -d:test
  
  
